@page "{teamId:int}"
@model GoalManager.Web.Pages.GoalManagement.TeamGoalsModel

<div class="container py-4">
	<div class="d-flex justify-content-between align-items-center mb-4">
		<div>
			<h1 class="h3 fw-light mb-1">@Model.Year Goals</h1>
		</div>
		@if (Model.GoalSet != null)
		{
			<a asp-page="AddGoal" asp-route-goalSetId="@Model.GoalSet.Id" class="btn btn-primary">
				<i class="fas fa-plus me-2"></i>Add Goal
			</a>
		}
	</div>

	<alert-messages error-messages="Model.ErrorMessages" success-messages="Model.SuccessMessages"></alert-messages>

	@if (Model.GoalSet != null)
	{
		<div class="mb-4">
			@foreach (var goal in Model.GoalSet.Goals)
			{
				var latestStatus = goal.GoalProgressHistory
				.OrderByDescending(p => p.Id)
				.FirstOrDefault()?.Status.ToString() ?? "No Status";
				<div class="card mb-3">
					<div class="card-body">
						<div class="d-flex justify-content-between align-items-start mb-3">
							<a asp-page="UpdateGoal"
							   asp-route-goalSetId="@goal.GoalSetId"
							   asp-route-goalId="@goal.Id"
							   class="text-decoration-none text-reset w-100">
								<div class="d-flex justify-content-between align-items-start mb-3">
									<h5 class="mb-1 fw-normal">@goal.Title</h5>
									<div class="d-flex align-items-center gap-2">
										<span class="badge @(GetBadgeStyle(latestStatus))">
											@latestStatus
										</span>
										<span class="badge bg-light text-dark">@goal.GoalType.Name</span>
									</div>
								</div>
								<div class="row g-3 mb-3">
									<div class="col-md-3">
										<div class="text-muted small">Percentage</div>
										<div>@goal.Percentage%</div>
									</div>
									<div class="col-md-3">
										<div class="text-muted small">Value Type</div>
										<div>@goal.GoalValue.GoalValueType.Name</div>
									</div>
									<div class="col-md-2">
										<div class="text-muted small">Min</div>
										<div>@goal.GoalValue.MinValue</div>
									</div>
									<div class="col-md-2">
										<div class="text-muted small">Mid</div>
										<div>@goal.GoalValue.MidValue</div>
									</div>
									<div class="col-md-2">
										<div class="text-muted small">Max</div>
										<div>@goal.GoalValue.MaxValue</div>
									</div>
								</div>
							</a>
						</div>

						<form method="post" asp-page-handler="UpdateProgress">
							<input type="hidden" name="goalSetId" value="@Model.GoalSet.Id" />
							<input type="hidden" name="goalId" value="@goal.Id" />

							<div class="row g-3 align-items-end">
								<div class="col-md-6">
									<label class="form-label small text-muted">Current Progress</label>
									<div class="d-flex align-items-center gap-3">
										<input type="range"
											   name="actualValue"
											   min="@goal.GoalValue.MinValue"
											   max="@goal.GoalValue.MaxValue"
											   value="@goal.ActualValue"
											   class="form-range"
											   oninput="updateSliderValue(this)" />
										<span id="sliderValue-@goal.Id" class="text-nowrap" style="min-width: 40px;">
											@goal.ActualValue
										</span>
									</div>
								</div>

								<div class="col-md-5">
									<label class="form-label small text-muted">Comment</label>
									<input type="text"
										   name="comment"
										   placeholder="(Optional)"
										   class="form-control form-control-sm"
										   value="@(goal.GoalProgressHistory.Count > 0 ? goal.GoalProgressHistory.Last().Comment : "")" />
								</div>

								<div class="col-md-1">
									<button type="submit" class="btn btn-sm btn-outline-primary">
										<i class="fas fa-edit"></i>
									</button>
								</div>
							</div>
						</form>
					</div>
				</div>
			}
		</div>
	}
</div>

<script>
	function updateSliderValue(slider) {
		document.getElementById('sliderValue-' + slider.closest('.card').id).textContent = slider.value;
	}
	@functions {
		string GetBadgeStyle(string status)
		{
			return status switch
			{
				"WaitingForApproval" => "bg-warning text-dark",
				"Approved" => "bg-success text-white",
				"Rejected" => "bg-danger text-white",
				_ => "bg-secondary text-white" // Varsayılan durum
			};
		}
	}
</script>

<style>
	.card {
		border: 1px solid #e9ecef;
		border-radius: 0.5rem;
		box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
		transition: transform 0.2s ease-in-out;
	}

		.card:hover {
			transform: translateY(-2px);
			box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
		}

	.card-body {
		padding: 1.5rem;
	}

	a[asp-page="UpdateGoal"] {
		position: relative;
		z-index: 1;
	}
</style>
