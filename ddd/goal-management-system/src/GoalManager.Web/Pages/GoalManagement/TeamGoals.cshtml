@page "{teamId:int}"
@using GoalManager.Core.GoalManagement
@model GoalManager.Web.Pages.GoalManagement.TeamGoalsModel

@{
    ViewData["Title"] = $"{Model.Year} Goals";

    var isReadOnly = Model.GoalSet?.Status == GoalSetStatus.Approved || Model.GoalSet?.Status == GoalSetStatus.WaitingForApproval;
}

@section Style
{
	<style>
		.card {
		border: 1px solid #e9ecef;
		border-radius: 0.5rem;
		box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
		transition: transform 0.2s ease-in-out;
		}

		.card:hover {
		transform: translateY(-2px);
		box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
		}

		.card-body {
		padding: 1.5rem;
		}

		a[asp-page="UpdateGoal"] {
		position: relative;
		z-index: 1;
		}

        .status-badge {
            font-size: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

            .status-badge i {
                font-size: 1.1rem;
            }

        .status-approved {
            background-color: #198754;
            color: white;
        }

        .status-waiting {
            background-color: #ffc107;
            color: #212529;
        }
	</style>
}

<div class="container py-4">
	<div class="d-flex justify-content-between align-items-center mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <h1 class="h3 fw-light mb-1">@Model.Year Goals</h1>
        </div>
		@if (Model.GoalSet != null && !isReadOnly)
		{
			<a asp-page="AddGoal" asp-route-goalSetId="@Model.GoalSet.Id" class="btn btn-primary">
				<i class="fas fa-plus me-2"></i>Add Goal
			</a>
		} 
        else if (Model.GoalSet?.Status == GoalSetStatus.Approved)
        {
            <div class="status-badge status-approved mt-2">
                <i class="fas fa-check-circle"></i> Approved
            </div>
        }
        else if (Model.GoalSet?.Status == GoalSetStatus.WaitingForApproval)
        {
            <div class="status-badge status-waiting mt-2">
                <i class="fas fa-clock"></i> Waiting For Approval
            </div>
        }
	</div>

	<alert-messages error-messages="Model.ErrorMessages" success-messages="Model.SuccessMessages"></alert-messages>

	@if (Model.GoalSet != null)
	{
        <div class="mb-4">
            @foreach (var goal in Model.GoalSet.Goals)
            {
                var latestStatus = goal.Status;
                var latestStatusText = latestStatus?.ToString() ?? "No Status";

                <div class="card mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            @if (isReadOnly)
                            {
                                <div class="text-decoration-none text-reset w-100" style="pointer-events: none; opacity: 0.6; cursor: not-allowed;">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <h5 class="mb-1 fw-normal">@goal.Title</h5>
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="badge @(GetBadgeStyle(latestStatusText))">
                                                @latestStatusText
                                            </span>
                                            <span class="badge bg-light text-dark">@goal.GoalType.Name</span>
                                        </div>
                                    </div>
                                    <div class="row g-3 mb-3">
                                        <div class="col-md-3">
                                            <div class="text-muted small">Percentage</div>
                                            <div>@goal.Percentage%</div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-muted small">Value Type</div>
                                            <div>@goal.GoalValue.GoalValueType.Name</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Min</div>
                                            <div>@goal.GoalValue.MinValue</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Mid</div>
                                            <div>@goal.GoalValue.MidValue</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Max</div>
                                            <div>@goal.GoalValue.MaxValue</div>
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <a asp-page="UpdateGoal"
                                   asp-route-goalSetId="@Model.GoalSet.Id"
                                   asp-route-goalId="@goal.Id"
                                   class="text-decoration-none text-reset w-100">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <h5 class="mb-1 fw-normal">@goal.Title</h5>
                                        <div class="d-flex align-items-center gap-2">
                                            <span class="badge @(GetBadgeStyle(latestStatusText))">
                                                @latestStatusText
                                            </span>
                                            <span class="badge bg-light text-dark">@goal.GoalType.Name</span>
                                        </div>
                                    </div>
                                    <div class="row g-3 mb-3">
                                        <div class="col-md-3">
                                            <div class="text-muted small">Percentage</div>
                                            <div>@goal.Percentage%</div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-muted small">Value Type</div>
                                            <div>@goal.GoalValue.GoalValueType.Name</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Min</div>
                                            <div>@goal.GoalValue.MinValue</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Mid</div>
                                            <div>@goal.GoalValue.MidValue</div>
                                        </div>
                                        <div class="col-md-2">
                                            <div class="text-muted small">Max</div>
                                            <div>@goal.GoalValue.MaxValue</div>
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>

                        <form method="post" asp-page-handler="UpdateProgress">
                            <input type="hidden" name="goalSetId" value="@Model.GoalSet.Id" />
                            <input type="hidden" name="goalId" value="@goal.Id" />

                            <div class="row g-3 align-items-end">
                                <div class="col-md-6">
                                    <label class="form-label small text-muted">Current Progress</label>
                                    <div class="d-flex align-items-center gap-3">
                                        <input type="range"
                                               name="actualValue"
                                               min="@goal.GoalValue.MinValue"
                                               max="@goal.GoalValue.MaxValue"
                                               value="@goal.ActualValue"
                                               class="form-range"
                                               oninput="updateSliderValue(this, @goal.Id)"
                                               @(isReadOnly ? "disabled" : "") />
                                        <span id="sliderValue-@goal.Id" class="text-nowrap" style="min-width: 40px;">
                                            @goal.ActualValue
                                        </span>
                                    </div>
                                </div>

                                <div class="col-md-5">
                                    <label class="form-label small text-muted">Comment</label>
                                    <input type="text"
                                           name="comment"
                                           placeholder="(Optional)"
                                           class="form-control form-control-sm"
                                           value="@goal.Comment"
                                           @(isReadOnly ? "readonly" : "") />
                                </div>

                                <div class="col-md-1">
                                    <button type="submit" class="btn btn-sm btn-outline-primary" @(isReadOnly ? "disabled" : "")>
                                        <i class="fas fa-edit"></i>
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            }
        </div>
        @if (!isReadOnly)
        {
            <div class="d-flex justify-content-end mt-3">
                <form asp-page-handler="SendToApproval" method="post">
                    <input type="hidden" name="goalSetId" value="@Model.GoalSet.Id" />
                    <input type="hidden" name="teamId" value="@Model.GoalSet.TeamId" />
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane"></i> Send to Approval
                    </button>
                </form>
            </div>
        }
	}
</div>

<script>
	function updateSliderValue(slider) {
		document.getElementById('sliderValue-' + slider.closest('.card').id).textContent = slider.value;
	}
	@functions {
		string GetBadgeStyle(string status)
		{
			return status switch
			{
				"WaitingForApproval" => "bg-warning text-dark",
				"Approved" => "bg-success text-white",
				"Rejected" => "bg-danger text-white",
				_ => "bg-secondary text-white" // Varsayılan durum
			};
		}
	}
</script>

<style>
	.card {
		border: 1px solid #e9ecef;
		border-radius: 0.5rem;
		box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
		transition: transform 0.2s ease-in-out;
	}

		.card:hover {
			transform: translateY(-2px);
			box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
		}

	.card-body {
		padding: 1.5rem;
	}

	a[asp-page="UpdateGoal"] {
		position: relative;
		z-index: 1;
	}
</style>
